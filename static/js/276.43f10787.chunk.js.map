{"version":3,"file":"static/js/276.43f10787.chunk.js","mappings":"iTAEMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,EAAAA,EAAAA,IAAA,kEAC2DF,IAC/DG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,KAHT,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQN,EAAAA,EAAAA,IAAA,4DAE4CF,EAF5C,iCAEwEQ,EAFxE,gCAIVL,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IALT,0GAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iFACQR,EAAAA,EAAAA,IAAA,6CAE6BQ,EAF7B,oBAEgDV,EAFhD,+CAIVG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IALT,0GAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iFACQR,EAAAA,EAAAA,IAAA,6CAE6BQ,EAF7B,4BAEwDV,EAFxD,+CAIVG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKO,IAAhB,IALT,0GAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,iFACQR,EAAAA,EAAAA,IAAA,8CAE8BQ,EAF9B,4BAEyDV,EAFzD,+CAIVG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IALT,0G,wGC/BMQ,EAAYC,EAAAA,EAAAA,GAAH,sIAQTC,EAAKD,EAAAA,EAAAA,GAAH,gIAQFE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,gH,SCGlB,EAnBiB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACZC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAC,GACT,OACE,SAACP,EAAD,WACE,SAACC,EAAD,CAAOO,GAAE,kBAAaD,EAAQE,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAQK,SAFJL,EAAQE,GAMpB,OAIR,C,kJClBYI,EAAOd,EAAAA,EAAAA,KAAH,oJAQJe,EAAYf,EAAAA,EAAAA,MAAH,+MAYTgB,EAAYhB,EAAAA,EAAAA,OAAH,oN,SCAtB,EAnBoB,SAAC,GAA4B,IAA1BiB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OACE,UAACJ,EAAD,CAAMI,SAAUA,EAAhB,WACE,SAACH,EAAD,CACEI,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZL,SAAUA,KAEZ,SAACD,EAAD,CAAWG,KAAK,SAAhB,UACE,2BACE,SAAC,MAAD,UAKT,E,UCiBD,EA9Be,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRF,EAAK,UAAGF,EAAaK,IAAI,gBAApB,QAAgC,GACtCH,IAGLrC,EAAAA,EAAAA,GAAeqC,GAAOzC,KAAKqC,EAC5B,GAAE,CAACE,IAWJ,OACE,iCACE,SAACM,EAAD,CAAaf,SAPI,SAAAgB,GACnBA,EAAEC,iBACFP,EAA0B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,EAIwCZ,SAXpB,SAAAiB,GACnBJ,EAASI,EAAEE,OAAOC,MACnB,KAUG,SAACC,EAAA,EAAD,CAAUlC,MAAOoB,MAGtB,C","sources":["components/Api/Api.jsx","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'b30254b2dbf2d15ba793a5b6ad463809';\n\nexport async function trendingMovies() {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`)\n    .then(result => result.data.results);\n}\n\nexport async function getMovieSearch(moviesName) {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${moviesName}&page=1&include_adult=false`\n    )\n    .then(result => result.data.results);\n}\n\nexport async function getMovieById(movieId) {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US&page=1&include_adult=false`\n    )\n    .then(result => result.data);\n}\n\nexport async function getCredits(movieId) {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US&page=1&include_adult=false`\n    )\n    .then(result => result.data.cast);\n}\n\nexport async function getReviews(movieId) {\n  return await axios\n    .get(\n      ` https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1&include_adult=false`\n    )\n    .then(result => result.data.results);\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListMovie = styled.ul`\n  font-size: 1rem;\n  list-style-type: none;\n  text-align: start;\n  padding: 12px 18px;\n  margin: 0 auto;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: large;\n  color: black;\n  margin-top: 10px;\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: cornflowerblue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ListMovie, Li, Links } from './FilmList.styled';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ListMovie>\n        {films.map(element => {\n          return (\n            <Li key={element.id}>\n              <Links to={`/movies/${element.id}`} state={{ from: location }}>\n                {element.title}\n              </Links>\n            </Li>\n          );\n        })}\n      </ListMovie>\n    </>\n  );\n};\n\nexport default FilmList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: cornflowerblue;\n  height: 60px;\n`;\n\nexport const InputForm = styled.input`\n  width: 300px;\n  height: 30px;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n  margin-right: 15px;\n  :hover {\n    box-shadow: 0 8px 10px 2px rgb(0 0 0 / 25%);\n  }\n`;\n\nexport const SearchBut = styled.button`\n  width: 70px;\n  height: 30px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  :hover {\n    box-shadow: 0 8px 10px 2px rgb(0 0 0 / 25%);\n  }\n`;\n","import { FcSearch } from 'react-icons/fc';\nimport { Form, InputForm, SearchBut } from './Search.styled';\n\nconst SearchFilms = ({ onChange, onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <InputForm\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n        onChange={onChange}\n      />\n      <SearchBut type=\"submit\">\n        <span>\n          <FcSearch></FcSearch>\n        </span>\n      </SearchBut>\n    </Form>\n  );\n};\n\nexport default SearchFilms;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from '../../components/Api/Api';\nimport SearchFilms from '../../components/Search/Search';\n\nimport FilmList from '../../components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) {\n      return;\n    }\n    getMovieSearch(query).then(setMovies);\n  }, [searchParams]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchFilms onSubmit={handleSubmit} onChange={handleChange} />\n      <FilmList films={movies}></FilmList>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","trendingMovies","axios","then","result","data","results","getMovieSearch","moviesName","getMovieById","movieId","getCredits","cast","getReviews","ListMovie","styled","Li","Links","Link","films","location","useLocation","map","element","to","id","state","from","title","Form","InputForm","SearchBut","onChange","onSubmit","type","autoComplete","autoFocus","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","setQuery","useEffect","get","Search","e","preventDefault","target","value","FilmList"],"sourceRoot":""}